{"version":3,"file":"static/js/18.951fa8b7.chunk.js","mappings":"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","sources":["pages/Users/UsersFilter/UsersDoubleSlider/UsersDoubleSlider.tsx","pages/Users/UsersFilter/UsersSearch/UsersSearch.tsx","pages/Users/UsersFilter/UsersFilter.tsx","pages/Users/UsersHeader/UsersHeader.tsx","pages/Users/UsersTable/UsersTableHeader/UsersTableHeader.tsx","pages/Users/UsersTable/UsersTableRow/UsersTableRow.tsx","pages/Users/UsersTable/UsersTable.tsx","pages/Users/Users.tsx","../node_modules/@mui/icons-material/CheckCircle.js"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { Box, Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { DoubleSlider } from '../../../../components';\nimport { useActions } from '../../../../hooks/useActions';\nimport { allUsersActions, appSelectors, usersSelectors } from '../../../../store';\n\nexport const UsersDoubleSlider: FC = () => {\n  const { setMinMaxUsersCount } = useActions(allUsersActions);\n\n  const min = useSelector(usersSelectors.selectMinPublicCardPacksCount);\n  const max = useSelector(usersSelectors.selectMaxPublicCardPacksCount);\n  const minFilter = useSelector(usersSelectors.selectFilterMin);\n  const maxFilter = useSelector(usersSelectors.selectFilterMax);\n  const status = useSelector(appSelectors.selectStatus);\n\n  return (\n    <Box sx={{ height: '62px', width: '300px', display: 'grid' }}>\n      <Typography variant=\"body2\">Number of public packs</Typography>\n      <DoubleSlider\n        minFromServer={min}\n        maxFromServer={max}\n        minFromFilter={minFilter}\n        maxFromFilter={maxFilter}\n        setMinMaxCount={setMinMaxUsersCount}\n        disabled={status === 'loading'}\n      />\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { Box, Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { Search } from '../../../../components';\nimport { useActions } from '../../../../hooks/useActions';\nimport { allUsersActions, usersSelectors } from '../../../../store';\n\nexport const UsersSearch: FC = () => {\n  const { setSearchUserName } = useActions(allUsersActions);\n\n  const userName = useSelector(usersSelectors.selectFilterUserName);\n\n  return (\n    <Box style={{ height: '62px', width: '300px' }}>\n      <Typography variant=\"body2\">Search user</Typography>\n      <Search title={userName} setTitle={setSearchUserName} />\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { Box, styled } from '@mui/material';\n\nimport { UsersDoubleSlider } from './UsersDoubleSlider/UsersDoubleSlider';\nimport { UsersSearch } from './UsersSearch/UsersSearch';\n\nexport const UsersFilter: FC = () => {\n  return (\n    <FilterBox>\n      <UsersSearch />\n      <UsersDoubleSlider />\n    </FilterBox>\n  );\n};\n\nexport const FilterBox = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '25px',\n  marginBottom: '30px',\n  [theme.breakpoints.up('md')]: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n}));\n","import React, { FC } from 'react';\n\nimport { Box, Typography } from '@mui/material';\n\nexport const UsersHeader: FC = () => {\n  return (\n    <Box\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginBottom: '30px',\n      }}\n    >\n      <Typography variant=\"h6\">Users</Typography>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { TableCell, TableRow } from '@mui/material';\n\nexport const UsersTableHeader: FC = () => {\n  return (\n    <TableRow>\n      <TableCell align=\"left\" style={{ width: '100px' }}>\n        Avatar\n      </TableCell>\n      <TableCell align=\"left\" style={{ minWidth: '268px', maxWidth: '268px' }}>\n        Name\n      </TableCell>\n      <TableCell align=\"left\" style={{ width: '100px' }}>\n        Public packs\n      </TableCell>\n      <TableCell align=\"left\" style={{ width: '250px' }}>\n        Last Updated\n      </TableCell>\n      <TableCell align=\"left\" style={{ width: '250px' }}>\n        Created\n      </TableCell>\n      <TableCell align=\"left\" style={{ width: '100px' }}>\n        Verified\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React, { FC } from 'react';\n\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Avatar, TableCell, TableRow } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { useSelector } from 'react-redux';\n\nimport { modalType } from '../../../../enums/modalType';\nimport { useActions } from '../../../../hooks/useActions';\nimport { allModalActions, appSelectors } from '../../../../store';\nimport { ShowUserModalType } from '../../../../store/slices/modalSlice';\nimport { UserType } from '../../../../types';\n\nconst BLUE_COLOR = 500;\n\nexport const UsersTableRow: FC<{ user: UserType }> = ({ user }) => {\n  const { setModalOpen } = useActions(allModalActions);\n\n  const status = useSelector(appSelectors.selectStatus);\n\n  const onShowUserModalClick = (): void => {\n    if (status === 'loading') return;\n\n    setModalOpen({\n      type: modalType.SHOW_USER,\n      data: {\n        id: user._id,\n      } as ShowUserModalType,\n    });\n  };\n\n  return (\n    <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }} hover>\n      <TableCell\n        align=\"left\"\n        style={{ width: '100px', cursor: 'pointer' }}\n        onClick={onShowUserModalClick}\n      >\n        <Avatar\n          sx={{ width: 60, height: 60, bgcolor: blue[BLUE_COLOR] }}\n          alt={user.name}\n          src={user.avatar || ''}\n        />\n      </TableCell>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        align=\"left\"\n        onClick={onShowUserModalClick}\n        style={{\n          cursor: 'pointer',\n          maxWidth: '268px',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n        }}\n      >\n        {user.name}\n      </TableCell>\n      <TableCell align=\"left\">{user.publicCardPacksCount}</TableCell>\n      <TableCell align=\"left\">{new Date(user.updated).toLocaleString()}</TableCell>\n      <TableCell component=\"th\" scope=\"row\" align=\"left\">\n        {new Date(user.created).toLocaleString()}\n      </TableCell>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        align=\"left\"\n        style={{ display: 'flex', alignItems: 'center' }}\n      >\n        {user.verified && <CheckCircleIcon fontSize=\"small\" color=\"primary\" />}\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React, { ChangeEvent, FC, MouseEvent } from 'react';\n\nimport { Paper, Table, TableBody, TableContainer, TablePagination } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { useActions } from '../../../hooks/useActions';\nimport { allUsersActions, usersSelectors } from '../../../store';\n\nimport { UsersTableHeader } from './UsersTableHeader/UsersTableHeader';\nimport { UsersTableRow } from './UsersTableRow/UsersTableRow';\n\nconst FIVE_CARDS_PER_PAGE = 5;\nconst TEN_CARDS_PER_PAGE = 10;\nconst TWENTY_CARDS_PER_PAGE = 20;\n\nexport const UsersTable: FC = () => {\n  const { setUsersPage, setUsersPageCount } = useActions(allUsersActions);\n\n  const users = useSelector(usersSelectors.selectUsers);\n  const usersTotalCount = useSelector(usersSelectors.selectUsersTotalCount);\n  const page = useSelector(usersSelectors.selectFilterPage);\n  const pageCount = useSelector(usersSelectors.selectFilterPageCount);\n\n  const handleChangePage = (\n    e: MouseEvent<HTMLButtonElement> | null,\n    page: number,\n  ): void => {\n    setUsersPage(page + 1);\n  };\n  const handleChangeRowsPerPage = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setUsersPageCount(Number(e.target.value));\n  };\n\n  return (\n    <TableContainer component={Paper} style={{ overflowX: 'scroll' }}>\n      <Table style={{ minWidth: '900px' }}>\n        <UsersTableHeader />\n        <TableBody>\n          {users.map(u => (\n            <UsersTableRow key={u._id} user={u} />\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[\n          FIVE_CARDS_PER_PAGE,\n          TEN_CARDS_PER_PAGE,\n          TWENTY_CARDS_PER_PAGE,\n        ]}\n        component=\"div\"\n        count={usersTotalCount}\n        rowsPerPage={pageCount}\n        page={page - 1}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </TableContainer>\n  );\n};\n","import React, { FC, useEffect } from 'react';\n\nimport { Box } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { useActions } from '../../hooks/useActions';\nimport { allUsersActions, usersSelectors } from '../../store';\n\nimport { UsersFilter } from './UsersFilter/UsersFilter';\nimport { UsersHeader } from './UsersHeader/UsersHeader';\nimport { UsersTable } from './UsersTable/UsersTable';\n\nconst Users: FC = () => {\n  const { getUsers } = useActions(allUsersActions);\n\n  const filter = useSelector(usersSelectors.selectUsersFilter);\n\n  useEffect(() => {\n    getUsers();\n  }, [filter]);\n\n  return (\n    <Box style={{ width: '100%' }}>\n      <UsersHeader />\n      <UsersFilter />\n      <UsersTable />\n    </Box>\n  );\n};\n\nexport default Users;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;"],"names":["UsersDoubleSlider","setMinMaxUsersCount","useActions","allUsersActions","min","useSelector","usersSelectors","max","minFilter","maxFilter","status","appSelectors","Box","sx","height","width","display","Typography","variant","minFromServer","maxFromServer","minFromFilter","maxFromFilter","setMinMaxCount","disabled","UsersSearch","setSearchUserName","userName","style","title","setTitle","UsersFilter","FilterBox","styled","theme","flexDirection","alignItems","gap","marginBottom","breakpoints","up","justifyContent","UsersHeader","UsersTableHeader","TableRow","TableCell","align","minWidth","maxWidth","UsersTableRow","user","setModalOpen","allModalActions","onShowUserModalClick","type","modalType","data","id","_id","border","hover","cursor","onClick","Avatar","bgcolor","blue","alt","name","src","avatar","component","scope","textOverflow","whiteSpace","overflow","publicCardPacksCount","Date","updated","toLocaleString","created","verified","CheckCircle","fontSize","color","UsersTable","setUsersPage","setUsersPageCount","users","usersTotalCount","page","pageCount","TableContainer","Paper","overflowX","Table","TableBody","map","u","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","e","onRowsPerPageChange","Number","target","value","getUsers","filter","useEffect","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}